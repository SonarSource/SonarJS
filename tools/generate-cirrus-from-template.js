/*
 * SonarQube JavaScript Plugin
 * Copyright (C) 2011-2025 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the Sonar Source-Available License Version 1, as published by SonarSource SA.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the Sonar Source-Available License for more details.
 *
 * You should have received a copy of the Sonar Source-Available License
 * along with this program; if not, see https://sonarsource.com/license/ssal/
 */

import fs from 'node:fs/promises';
import semver from 'semver';

// 1. Read package.json and template
const pkgRaw = await fs.readFile('package.json', 'utf8');
const pkg = JSON.parse(pkgRaw);
const range = pkg.engines.node;
const selectedVersions = range.split(' || ').map(part => semver.minVersion(part));
const template = await fs.readFile('.cirrus.template.yml', 'utf8');

// 2. Generate cirrus tasks for Node tasks
const nodeTasks = selectedVersions
  .map(nodeVersion => {
    const short = nodeVersion.major;
    return `
    - name: 'QA with node ${short} on host Ubuntu SQ:LATEST'
      eks_container:
        docker_arguments:
          NODE_VERSION: ${nodeVersion}`;
  })
  .join('');

// 3. Replace placeholder in template
let output = template.replaceAll(' # {{NODE_TASKS}}', nodeTasks);

// 4. Add auto-generated header
const autogeneratedHeader = `# This file is automatically generated by tools/generate-cirrus-from-template.js
# Do not edit manually! Edit .cirrus.template.yml instead.
# @generated
`;
output = autogeneratedHeader + output;

// 5. Write the final .cirrus.yml
await fs.writeFile('.cirrus.yml', output);
console.log('Generated .cirrus.yml!');

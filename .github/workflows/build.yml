name: Build
on:
  push:
    branches:
      - master
      - branch-*
      - dogfood-*
  pull_request:
  merge_group:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Nightly for analyze and iris tasks

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: github-ubuntu-latest-s
    name: Build
    permissions:
      id-token: write
      contents: write
    steps:
      - &checkout
        name: Checkout source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - uses: SonarSource/ci-github-actions/build-maven@v1
        with:
          deploy-pull-request: true
          artifactory-reader-role: private-reader
          artifactory-deployer-role: qa-deployer
          maven-args: ''

  promote:
    needs:
      - build
      - test_js_win
      - test_java_win
      - eslint_plugin
      - plugin_qa_with_node
      - plugin_qa_without_node
      - plugin_qa_fast_with_node
      - plugin_qa_fast_without_node
      - plugin_qa_win
      - plugin_qa_win_fast
      - css_ruling
      - ruling
      - js_ts_ruling
      - analyze
    runs-on: github-ubuntu-latest-s
    name: Promote
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          cache_save: false
          version: 2025.7.12
      - uses: SonarSource/ci-github-actions/promote@v1
        with:
          promote-pull-request: true

  build_eslint:
    runs-on: github-ubuntu-latest-s
    name: Build ESLint Plugin
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Build ESLint plugin
        run: npm run eslint-plugin:build
      - name: Upload ESLint build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && !cancelled()
        with:
          name: eslint-build
          path: lib

  knip:
    runs-on: github-ubuntu-latest-s
    name: Knip
    needs: [build]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Install dependencies
        run: npm install --no-package-lock
      - name: Run knip
        run: |
          npm run bbf
          npx knip

  test_js:
    runs-on: github-ubuntu-latest-s
    name: Test JavaScript
    needs: [build]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Run JavaScript tests
        run: |
          npm run generate-meta
          npm run bridge:compile
          npm run bridge:test:cov
      - name: Upload JS coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && !cancelled()
        with:
          name: js-coverage
          path: coverage/js

  test_java:
    runs-on: github-ubuntu-latest-s
    name: Test Java
    needs: [build]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Run Java tests with coverage
        run: mvn install -T1C -Pcoverage,coverage-report
      - name: Upload Java coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && !cancelled()
        with:
          name: java-coverage
          path: coverage/java

  analyze:
    runs-on: github-ubuntu-latest-s
    name: Analyze - ${{ matrix.name }}
    needs: [test_js, test_java]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Download JS coverage
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: js-coverage
          path: coverage/js
      - name: Download Java coverage
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: java-coverage
          path: coverage/java
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: SONAR_TOKEN;
      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ matrix.sonar_host_url }}
          SONAR_PROJECT_KEY: ${{ matrix.sonar_project_key }}
          SONAR_ORGANIZATION: ${{ matrix.sonar_organization }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn sonar:sonar \
            -P-deploy-sonarsource,-release,-sign \
            -Dsonar.organization=$SONAR_ORGANIZATION \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dcommercial \
            -Dmaven.shade.skip=true \
            -Dmaven.install.skip=true \
            -Dmaven.deploy.skip=true \
            -DskipTests

  build_win:
    runs-on: windows-latest
    name: Build Windows
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        shell: bash
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-win-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Build
        run: mvn install -T1C -e -DskipTests

  test_js_win:
    runs-on: windows-latest
    name: Test JavaScript Windows
    needs: [build_win]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        shell: bash
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-win-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Test JavaScript
        run: |
          npm run generate-meta
          npm run bridge:compile
          npm run bridge:test:js

  test_java_win:
    runs-on: windows-latest
    name: Test Java Windows
    needs: [build_win]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        shell: bash
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-win-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Test Java
        run: mvn install -T1C

  plugin_qa_with_node:
    runs-on: github-ubuntu-latest-s
    name: QA with Node ${{ matrix.node_version }}
    strategy:
      matrix:
        node_version: ['20.12.0', '22.11.0']
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Install Node.js ${{ matrix.node_version }}
        run: |
          mise use node@${{ matrix.node_version }}
          node --version
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Set Orchestrator home
        run: |
          export THIS_MONTH=$(date '+%Y-%m')
          echo "THIS_MONTH=${THIS_MONTH}" >> $GITHUB_ENV
          echo "ORCHESTRATOR_HOME=${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}" >> $GITHUB_ENV
          mkdir -p ${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}
      - name: Cache Orchestrator
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: orchestrator/${{ env.THIS_MONTH }}
          key: orchestrator-${{ env.THIS_MONTH }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: LATEST_RELEASE
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          mvn package -f its/plugin/plugins/consumer-plugin/pom.xml
          mvn -f its/plugin/sonarlint-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report
          mvn -f its/plugin/tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report

  plugin_qa_fast_with_node:
    runs-on: github-ubuntu-latest-s
    name: Fast QA with Node ${{ matrix.node_version }}
    strategy:
      matrix:
        node_version: ['20.12.0', '22.11.0']
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Install Node.js ${{ matrix.node_version }}
        run: |
          mise use node@${{ matrix.node_version }}
          node --version
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run Fast QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: LATEST_RELEASE
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          mvn package -f its/plugin/plugins/pom.xml
          mvn -f its/plugin/fast-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report

  plugin_qa_without_node:
    runs-on: github-ubuntu-latest-s
    name: QA without Node - ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Ubuntu LATEST
            sonarjs_artifact: multi
            sq_version: LATEST_RELEASE
            cache_type: monthly
          - name: Alpine LATEST
            sonarjs_artifact: linux-x64-musl
            sq_version: LATEST_RELEASE
            cache_type: monthly
          - name: Ubuntu DEV
            sonarjs_artifact: multi
            sq_version: DEV
            cache_type: daily
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Set Orchestrator home
        run: |
          if [ "${{ matrix.cache_type }}" = "monthly" ]; then
            export CACHE_KEY=$(date '+%Y-%m')
          else
            export CACHE_KEY=$(date '+%Y-%m-%d')
          fi
          echo "CACHE_KEY=${CACHE_KEY}" >> $GITHUB_ENV
          echo "ORCHESTRATOR_HOME=${GITHUB_WORKSPACE}/orchestrator/${CACHE_KEY}" >> $GITHUB_ENV
          mkdir -p ${GITHUB_WORKSPACE}/orchestrator/${CACHE_KEY}
      - name: Cache Orchestrator
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: orchestrator/${{ env.CACHE_KEY }}
          key: orchestrator-${{ env.CACHE_KEY }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: ${{ matrix.sq_version }}
          SONARJS_ARTIFACT: ${{ matrix.sonarjs_artifact }}
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          mvn package -f its/plugin/plugins/consumer-plugin/pom.xml
          mvn -f its/plugin/sonarlint-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report
          mvn -f its/plugin/tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report

  plugin_qa_fast_without_node:
    runs-on: github-ubuntu-latest-s
    name: Fast QA without Node - ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Ubuntu LATEST
            sonarjs_artifact: multi
            sq_version: LATEST_RELEASE
          - name: Alpine LATEST
            sonarjs_artifact: linux-x64-musl
            sq_version: LATEST_RELEASE
          - name: Ubuntu DEV
            sonarjs_artifact: multi
            sq_version: DEV
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run Fast QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: ${{ matrix.sq_version }}
          SONARJS_ARTIFACT: ${{ matrix.sonarjs_artifact }}
          BUILD_NUMBER: ${{ github.run_number }}
          MVN_TEST: '-Dtest=!EslintCustomRulesTest'
          IGNORE_CLASSES: '--projects !org.sonarsource.javascript:eslint-custom-rules-plugin'
        run: |
          mvn package -f its/plugin/plugins/pom.xml ${IGNORE_CLASSES}
          mvn -f its/plugin/fast-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} ${MVN_TEST} -B -e -V verify surefire-report:report

  plugin_qa_win:
    runs-on: windows-latest
    name: QA Windows
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Set Orchestrator home
        shell: bash
        run: |
          export THIS_MONTH=$(date '+%Y-%m')
          echo "THIS_MONTH=${THIS_MONTH}" >> $GITHUB_ENV
          echo "ORCHESTRATOR_HOME=${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}" >> $GITHUB_ENV
          mkdir -p ${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}
      - name: Cache Orchestrator
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: orchestrator/${{ env.THIS_MONTH }}
          key: orchestrator-win-${{ env.THIS_MONTH }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: LATEST_RELEASE
          BUILD_NUMBER: ${{ github.run_number }}
        shell: bash
        run: |
          mvn package -f its/plugin/plugins/consumer-plugin/pom.xml
          mvn -f its/plugin/sonarlint-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report
          mvn -f its/plugin/tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report

  plugin_qa_win_fast:
    runs-on: windows-latest
    name: Fast QA Windows
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer username | ARTIFACTORY_DEPLOY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_DEPLOY_PASSWORD;
      - name: Run Fast QA tests
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          ARTIFACTORY_DEPLOY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_USERNAME }}
          ARTIFACTORY_DEPLOY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_DEPLOY_PASSWORD }}
          SONARSOURCE_QA: true
          SQ_VERSION: LATEST_RELEASE
          BUILD_NUMBER: ${{ github.run_number }}
        shell: bash
        run: |
          mvn package -f its/plugin/plugins/pom.xml
          mvn -f its/plugin/fast-tests/pom.xml -DskipTests=false -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V verify surefire-report:report

  js_ts_ruling:
    runs-on: github-ubuntu-latest-s
    name: JS/TS Ruling
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          submodules: true
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
      - name: Run JS/TS ruling
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          SONARSOURCE_QA: true
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          npm run build:fast
          npm run ruling
      - name: Upload ruling results on failure
        if: failure()
        run: sh tools/ruling-debug-script.sh packages/ruling/actual/jsts

  ruling:
    runs-on: github-ubuntu-latest-s
    name: Ruling
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 10
          submodules: true
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
      - name: Run ruling
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          SONARSOURCE_QA: true
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          cd its/ruling
          mvn test -Dtest=JsTsRulingTest -DskipTests=false -Dsonar.runtimeVersion=LATEST_RELEASE -Dmaven.test.redirectTestOutputToFile=false -Djunit.jupiter.execution.parallel.config.dynamic.factor=1 -B -e -V
      - name: Upload ruling results on failure
        if: failure()
        run: sh tools/ruling-debug-script.sh its/ruling/target/actual/jsts

  css_ruling:
    runs-on: github-ubuntu-latest-s
    name: CSS Ruling
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 10
          submodules: true
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Cache Maven repository
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: .m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: Set Orchestrator home
        run: |
          export THIS_MONTH=$(date '+%Y-%m')
          echo "THIS_MONTH=${THIS_MONTH}" >> $GITHUB_ENV
          echo "ORCHESTRATOR_HOME=${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}" >> $GITHUB_ENV
          mkdir -p ${GITHUB_WORKSPACE}/orchestrator/${THIS_MONTH}
      - name: Cache Orchestrator
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: orchestrator/${{ env.THIS_MONTH }}
          key: orchestrator-${{ env.THIS_MONTH }}
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader username | ARTIFACTORY_USERNAME;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
      - name: Run CSS ruling
        env:
          ARTIFACTORY_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          SONARSOURCE_QA: true
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          cd its/ruling
          mvn test -DskipTests=false -Dtest=CssRulingTest -Dsonar.runtimeVersion=LATEST_RELEASE -Dmaven.test.redirectTestOutputToFile=false -Djunit.jupiter.execution.parallel.config.dynamic.factor=1 -B -e -V
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: css-ruling-failures
          path: '**/target/actual/**/*'

  eslint_plugin:
    runs-on: github-ubuntu-latest-s
    name: ESLint Plugin - ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: ESLint 9 Min Node
            eslint_version: 9
            node_version: 20.12.0
          - name: ESLint 8 Min Node
            eslint_version: 8
            node_version: 20.12.0
          - name: ESLint 8 Node 16
            eslint_version: 8
            node_version: 16.20.2
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Install Node.js ${{ matrix.node_version }}
        run: |
          mise use node@${{ matrix.node_version }}
          node --version
      - name: Setup npmrc
        run: |
          cp .cirrus/npmrc $GITHUB_WORKSPACE/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/packages/jsts/src/rules/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint8-plugin-sonarjs/.npmrc
          cp .cirrus/npmrc $GITHUB_WORKSPACE/its/eslint9-plugin-sonarjs/.npmrc
      - name: Cache NPM dependencies
        uses: SonarSource/ci-github-actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/*') }}
      - name: Install NPM dependencies
        run: npm ci
      - name: Build ESLint plugin
        run: npm run eslint-plugin:build
      - name: Run ESLint plugin tests
        env:
          SONARSOURCE_QA: true
          ESLINT_VERSION: ${{ matrix.eslint_version }}
        run: |
          cd its/eslint${ESLINT_VERSION}-plugin-sonarjs
          npm install
          npx tsc --noEmit
          npm run test
